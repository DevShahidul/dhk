
//Font face mixin
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
} // End font-face mixin

// Font family style weight
@mixin fonts($font-size: $d-font-size, $line-height: $d-line-height, $fontWeight: normal, $letter-spacing: 0px, $fontFamily: $d-font-family, $fontStyle: normal){
    font-family: $fontFamily;
    font-style: $fontStyle;
    font-weight: $fontWeight;
    font-size: $font-size;
    line-height: $line-height;
    letter-spacing: $letter-spacing;

} // End font property

// Transition mixin
@mixin transition($property: all, $duration: .3s, $timing-function: ease-in-out, $delay: 0s) {
    -webkit-transition: $property $duration $timing-function $delay;
    -moz-transition: $property $duration $timing-function $delay;
    -ms-transition: $property $duration $timing-function $delay;
    -o-transition: $property $duration $timing-function $delay;
    transition: $property $duration $timing-function $delay;
}

// Transform mixin
@mixin transform($property) {
    -webkit-transform: $property;
    -moz-transform: $property;
    -ms-transform: $property;
    -o-transform: $property;
    transform: $property;
} // end transform

// Center top left both position mixin
@mixin centerBoth{
    position: absolute;
    left: 50%;
    top: 50%;
    @include transform(translateX(-50%) translateY(-50%));
    text-align: center;
}

// Center only left position
@mixin centerLeft {
    position: absolute;
    left: 50%;
    @include transform(translateX(-50%));
}

// Center only top position
@mixin centerTop {
    position: absolute;
    top: 50%;
    @include transform(translateY(-50%));
}

// Display Inline middle
@mixin inlineMiddle {
    display: inline-block; 
    vertical-align: middle;
    margin: 0 -2px;
}

// Full width heiht absolute
@mixin fullScreenAbs($top: 0, $right: 0, $bottom: 0, $left: 0) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// Sudo element
@mixin sudoElement($width: 100%, $height: 100%, $background: $overlay,  $position: absolute, $content: "", $zindex: -1){
    content: $content;
    left: 0;
    top: 0;
    background-color: $background;
    position: $position;
    width: $width;
    height: $height;
    z-index: $zindex;
} // End sudo element

// Sass grid
@mixin grid($cols, $mgn){
    float: left;
    margin-right: $mgn;
    width: ( (100% - (($cols - 1) * $mgn)) / $cols);
    &:nth-child(#{$cols}n){
        margin-right: 0;
    }
}